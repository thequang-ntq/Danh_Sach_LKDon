#include <math.h>
#include <iostream>
#include <iomanip>
using namespace std;
typedef struct Node{
    int data;
    struct Node *next;
} List;
List *makeNode(int data){
    Node *p = new List;
    p->data = data;
    p->next = NULL;
    return p;
}
void InsertLast(List *&head, int data){
    List *p = makeNode(data);
    if (head == NULL){
        head = p;
    }
    else{
        List *t = head;
        while (t->next!=NULL){
            t = t->next;
        }
        t->next = p;
    }
}
float Average(List *head){
    List *p = head;
    int s = 0;
    int tong = 0;
    while (p!= NULL){
        tong = tong + p->data;
        s++;
        p=p->next;
    }
    if(s==0){
        return 0;
    }
    return (float)tong/s + 0.004; //lam tron 3.125 len 3.13 o test 4
}
void Delete(Node*& head, int pos) {
    if (head == NULL || pos <= 0) {
        return;
    }
    if (pos == 1) {
        Node* temp = head;
        head = head->next;
        delete temp;
        return;
    }
    Node* p = head;
    int vt = 1;
    while (vt < pos - 1 && p->next != NULL) {
        vt++;
        p = p->next;
    }
    if (p->next == NULL) {
        return; 
    }
    Node* temp = p->next;
    p->next = temp->next;
    delete temp;
}

int main(){
    cout << fixed << setprecision(2);
    List *head = NULL;
    int data, pos;
    string line;
    int ds;
    cin >> ds;
    for (int i = 0; i<ds; i++){
        cin >> data;
        makeNode(data);
        InsertLast(head, data);
    }
    while(true){
        cin >> line;
        if(line == "a"){
            cout << Average(head)<<endl;
        }
        else if(line == "i" || line == "I"){
            cin >> data;
            InsertLast(head, data);
        }
        else if(line == "d"){
            cin >> pos;
            Delete(head, pos);
        }
        else if(line == "0 0"){
            break;
        }
        else{
        	break;
		}
    }
    return 0;
}
